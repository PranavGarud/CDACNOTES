contributors()
5+9
g <- 4
g
g <- 4
g
g
g <- 4
g
load("~/.RData")
ls()
ls()
load("~/.RData")
ls()
source("D:/Git/R/Script 1.R")
p <- 10000
n <- 3
r <- 9
si <- p*n*r/100
print(si)
si
w <- 34
s <- c(3,6,7,8,1)
g <- c("ft","rt","gc","hy")
d <- 45
class(d)
d <- as.integer(d)
class(d)
f <- TRUE
# or
f <- T
print(f)
g <- F
print(g)
p <- d >50
print(g)
d <- 45
p <- d >50
print(p)
###### Lists #######
s <- list(9,89,"dr","mr",F,3.45)
print(s)
pritn(s[4])
print(s[4])
k <- list(name,"ABC", age = 23, gdr = "M")
k <- list(name="ABC", age = 23, gdr = "M")
k$age
k$gdr
k['gdr'] #Not Recommended
ddd <- list(a = list(name="ABC", age = 23, gdr = "M"),
b = list(name="SSS", age = 18, gdr = "F"),
c = list(name="FFF", age = 33, gdr = "F"))
ddd$a
ddd$b
ddd$c
ddd$b$name
ddd$b
#################### Factor #######################
x <- c("D","A","C","C","B","A","D")
class(x)
fx <- factor(x)
class(fx)
x
fx
as.integer(x)
as.integer(fx)
fx
gdr <- c("m","f","m","f")
f_gdr <- factor(gdr)
f_gdr
as.integer(f_gdr)
############ Missing Values ###########
S <- NA
is.na(S)
d <- a
is.na(d)
v <- c(45,8,9,NA,23,NA,3)
d <- 4
is.na(d)
v <- c(45,8,9,NA,23,NA,3)
is.na(V)
sum(is.na(v))
is.na(V)
is.na(v)
is.nan(g)
is.na(g)
g <- 0/0
g
sum(is.na(v)) #Count missing in a vector
########## Infinity #########
w<-23/0
w
is.finite(w)
is.infinite(w)
is.na(w)
w*4
######### Matrix ###########
m <- matrix(c(2,4,1,5,0,90), 3,2)
m
m <- matrix(c(2,4,1,5,0,90), 3,2, byrow = T)
m
m <- matrix(c(2,4,1,5,0), 3,2)
m
m <- matrix(c(2,4,1,5), 3,2)
m
m <- matrix(c(2,4,1), 3,2)
m
m <- matrix(c(2,4), 3,2)
m
m <- matrix(c(2), 3,2)
m
m <- matrix(c(), 3,2)
m
m <- matrix(c(), 3,2)
m
n <- matrix(c(), 3,2)
n
n <- matrix(c(), 4,2)
n
####### Binding ########
v1 <- c(3,4,6,7)
v2 <- c(3,7,4,0)
a <- cbind(v1,v2)
b <- rbind(v1,v3)
b <- rbind(v1,v2)
a
b
class(a)
v1 <- c(3,4,6,7,9)
v2 <- c(3,7,4,0)
a <- cbind(v1,v2)
a
v1 <- c(3,4,6,7,9)
v2 <- c(5,7,4,0)
a <- cbind(v1,v2)
a
v1*v2
sum(v1*v2) #dot product
####### Arrays ########
d <- array(dim = 4)
d
####### Arrays ########
d <- array(dim = 4, data = c(3,5,6,0))
d
f <- array(dim = c(3,2),
data = c(3,5,6,3,1,2))
f
class(f)
h <- array(dim = c(3,4,2),
data = 1:24)
h
########## Data Frame ########
df <- data.frame(name = c("A","B","C"),
age = c(24,25,20),
gdr = c("m","f","m"))
df
View(df)
View(k)
View(s)
dim(df) #no.
str(df) #int
df$age
mean(df$age)
colnames(df) # column names of data frame
names(df)
k <- list(name="ABC", age = 23, gdr = "M")
colnames(k)
names(k)
###############################################
a <- read.csv("D:\Git\R\Datasets\A.csv")
###############################################
a <- read.csv("D:\Git\R\Datasets\A.csv")
###############################################
a <- read.csv("D:/Git/R/Datasets/A.csv")
a$A
cars2018 <- read.csv("D:/Git/R/Datasets/cars2018.csv")
cars2018
dim(cars2018)
str(cars2018)
mean(cars2018$MPG)
cars2018 <- read.csv("D:/Git/R/Datasets/cars2018.csv",stringsAsFactors = T)
str(cars2018)
View(cars2018)
table(cars2018$Transmission)
table(cars2018$Aspiration)
table(cars2018$Transmission,cars2018$Aspiration)
addmargins(table(cars2018$Transmission, cars2018$Aspiration))
housing <- read.csv(("D:/Git/R/Datasets/Housing.csv",stringAsFactors = T)
housing <- read.csv("D:/Git/R/Datasets/Housing.csv",stringAsFactors = T)
housing
housing <- read.csv("D:/Git/R/Datasets/Housing.csv",stringAsFactors = T)
housing <- read.csv("D:/Git/R/Datasets/Housing.csv",stringsAsFactors = T)
### how many houses are in preferred area?
housing
table(housing$prefarea)
### how many houses don't driveway?
table(housing$driveway)
### how many houses that have driveways and are in prefered area?
table(housing$prefarea,housing$driveway)
addmargins(table(housing$prefarea,housing$driveway))
addmargins(table(housing$prefarea,housing$driveway,
dnn = c(Pref area","Drive way")))
addmargins(table(housing$prefarea,housing$driveway,
dnn = c("Pref area","Drive way")))
128/(128+418)
418/?(128+418)
418/(128+418)
prop.table(table(housing$prefarea))
#What percentage of houses are in prefered area?
prop.table(table(housing$prefarea))
#What percentage of houses are in prefered area?
prop.table(table(housing$prefarea))*100
#What percentage of houses are in prefered area?
round(prop.table(table(housing$prefarea))*100,2)
#What percentage of houses not having drive ways?
round(prop.table(table(housing$driveway))*100,2)
round(prop.table(table(housing$prefarea,housing$driveway,
dnn = c("Pref area","Drive way")) )*100,2)
round(addmargins(prop.table(table(housing$prefarea,housing$driveway,
dnn = c("Pref area","Drive way")) )*100)),2)
round(addmargins(prop.table(table(housing$prefarea,housing$driveway,
dnn = c("Pref area","Drive way")) )*100),2)
bolyw <- read.csv("D:/Git/R/Datasets/Bollywood_2015.csv", header = F)
colnames(bolyw) <- c("movies","collections","budget","Verdict")
bolyw
diam <- read.csv2("D:/Git/R/Datasets/Diamonds.csv")
str(diam)
###### Setting a folder as working directory ########
setwd("D:/Git/R/Datasets/")
bolyw <- read.csv("Bollywood_2015_2.csv",header = F)
str(diam)
diam <- read.csv2("Diamonds.csv")
str(diam)
#### Excel sheet
library(readxl)
install.packages("readxl")
#### Excel sheet
library(readxl)
bank <- read_excel("bankruptcy.xlsx",sheet = "data")
bank
### Writing to a file ###
df <- data.frame(name = c("A","B","C"),
age = c(24,25,20),
gdr = c("m","f","m"))
write.csv(df,"\"D:/Git/R/my_df.csv", row.names = F)
write.csv(df,"D:/Git/R/my_df.csv", row.names = F)
df
### Subsetting a vector
v <- c(30,89,45,21,50,34,49,84,67)
v[2]
v[2:5]
c(v[2],v[6],v[1]) # 2nd, 6th and 1st elements
v > 50
##**##
v[v>50]
### Subsetting a matrix ###
m = matrix(1:20, 4,5)
m
m[2,3]
m[2,2:5]
m[2:5,2:4]
m[2:4,2:5]
m[2:4,3:5]
m[3,]
m[,4]
m[,4,drop=F]
m[,2:4,drop = F]
### Subsetting a Data Frame ###
setwd("D:/Git/R/Datasets/")
cars2018 <- read.csv("cars2018.csv",stringsAsFactors = T)
ss1 <- subset(cars2018, MPG>20)
ss1
ss1 <- subset(cars2018, MPG>20 & Transmission=="Automatic")
ss2 <- subset(cars2018, MPG>20 & Transmission %in% c("Automatic","CVT"))
ss2
ss1
#4th, 405th, 678th row
ss3 <- cars2018[c(4,405,678),]
ss3
#4th ,6th, 8th column
ss4 <- cars2018[,c(4,6,8)]
ss4
#or
ss4 <- subset(cars2018, select = c(Cylinders,Transmission,Aspiration))
ss4
#or
ss4 <- subset(cars2018, select=c(4,6,8))
ss4
data()
ss1 <- subset(diamonds, cut == "Premium" & color == "J")
diamonds <- read.csv2("Diamonds",stringsAsFactors = T)
diamonds <- read.csv2("Diamonds")
setwd("D:/Git/R/Datasets/")
diamonds <- read.csv2("Diamonds")
diamonds <- read.csv2("Diamonds.csv")
ss1 <- subset(diamonds, cut == "Premium" & color == "J")
source("D:/Git/R/Datasets/Day1.R", echo=TRUE)
ss1
View(ss1)
### for loop ###
for (i in 1:5){
print(i)
}
s <- c(4,7,89,23,12,0)
for(i in s){
print(i*i)
}
#C like way
for(i in 1:6){
print(s[i]*s[i])
}
print(cnt)
### While Loop ###
cnt <- 1
while(cnt <= 5){
print(cnt)
cnt <- cnt +1
}
##break
cnt <- 1
while(cnt <= 5){
if(cnt==3) break
print(cnt)
cnt <- cnt +1
}
##Continue Or next : Skipping an interation
cnt <- 1
while(cnt <= 5){
if(cnt == 3) next
print(cnt)
cnt <- cnt +1
}
for (i in  1:5) {
if (i==3) next
print(i)
}
for( i in 1:5 ){
if (i==3) next
print(i)
}
cnt <- 1
while(cnt <= 5){
if(cnt==3) break
print(cnt)
cnt <- cnt +1
}
for (i in  1:5) {
if (i==3) next
print(i)
}
## seq
seq(1,20)
seq(1,20,3)
seq(20,1,-2)
## log
s <- c(4,5,0,3,18,13,0)
log(s)
log1p(s)
d <- c(1200003,7800000,45099998,2698765,4)
log(d)
### exp ###
exp(1)
exp(3)
n <- log(9)
exp(n)
res <- ifelse(v <= 16, "Fail", "Pass")
### ifelse ###
v <- c(34, 12, 9, 25, 36, 2, 29, 16)
res <- ifelse(v <= 16, "Fail", "Pass")
res
### Aggregate Function ###
data("airquality")
names(airquality)
sum(is.na(airquality$Ozone))
sum(is.na(airquality$Solar.R))
sum(is.na(airquality$Wind))
sum(is.na(airquality$Temp))
sum(is.na(airquality$Month))
sum(is.na(airquality$Day))
source("D:/Git/R/Datasets/Day1.R", echo=TRUE)
mean(airquality$Wind)
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T) #ignoring NAs
summary(airquality$Ozone)
### attach
attach(airquality)
mean(wind)
mean(Ozone, na.rm = T)
detach(airquality)
mean(wind)
### attach
attach(airquality)
mean(wind)
### attach
attach(airquality)
attach(airquality)
mean(wind)
### attach
attach(airquality)
mean(Wind)
mean(Ozone, na.rm = T)
detach(airquality)
mean(Wind)
### Functions ###
g <- function(x){
return(3*x +5)
}
g(2)
g(3)
h -> function(x){
return(4*(x**2)+ 3*x + 2)
}
h -> function(x){
return(4*(x**2)+ 3*x + 2)
}
h -> function(x){
return(4*(x**2)+ 3*x + 2)
}
h <- function(x){
return(4*(x**2)+ 3*x + 2)
}
H(1)
h(1)
f <- function(x){
return(x*1.8+32)
}
f(32)
f(37)
f(39)
tempC <- readline("Enter the temp in celcius:")
f(tempC)
tempC <- readline("Enter the temp in celcius:")
12
tempC <- readline("Enter the temp in celcius:")
tempC <- as.numeric(tempC)
f(tempC)
mu_std <- function(col_name){
mu <- mean(col_name, na.rm = T)
std <- sd(col_name, na.rm = T)
s <- list(avg=mu,std_dev=std)
return(s)
}
mu_std(airquality$Solar.R)
ans <- mu_std(airquality$Solar.R)
ans <- mu_std(airquality$Solar.R)
paste("Mean:",ans$avg)
paste("Std dev:",ans$std_dev)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data("mtcars")
class(mtcars)
tbl_mtcars <- as_tibble(mtcars)
class(tbl_mtcars)
View(tbl_mtcars)
data("mtcars")
class(mtcars)
tbl_mtcars <- as_tibble(mtcars)
class(tbl_mtcars)
b <- read.csv("D:/Git/R/Datasets/B.csv")
arrange(b,B)
setwd("D:/Git/R/Datasets/")
b <- read.csv("B.csv")
arrange(b,B)
cars93 <- read.csv("Cars93.csv",stringsAsFactors = T)
arrange(cars93, Price)
View(cars93)
arrange(cars93, Price)
View(cars93)
s_cars <- arrange(cars93, Price)
s_cars <- arrange(cars93, desc(Price))
s_cars
cars93 <- read.csv("Cars93.csv",stringsAsFactors = T)
s_cars <- arrange(cars93, Type, Price)
s_cars <- arrange(cars93, Type, desc(Price))
s_cars
### Select ###
s_cars <- select(cars93, 1:4)
s_cars
s_cars <- select(cars93, Model:Price)
s_cars
s_cars <- select(cars93, starts_with("MPG"))
s_cars
s_cars <- select(cars93, contains("in"))
s_cars
names(s_cars)
